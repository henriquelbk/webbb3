"use client"

import Head from "next/head";
import Footer from "../../components/Footer";
import { useState, useEffect } from "react";
import { doLogin } from "@/services/Web3Services";
import { getCurrentVoting } from "@/services/Web3Services";
import { useRouter } from "next/navigation";


export default function Vote() {

  const { push } = useRouter();

  const DEFAULT_OPTION = {name: "Loading...", image: "https://"}

  const [message, setMessage] = useState(""); 
  const [voting, setVoting] = useState({ maxDate: Date.now() });
  const [option1, setOption1] = useState(DEFAULT_OPTION);
  const [option2, setOption2] = useState(DEFAULT_OPTION);
  const [showVotes, setShowVotes] = useState(0);
  
  
  useEffect(() => {
    if(!localStorage.getItem("wallet")) return push("/");

    getCurrentVoting()
    .then(voting => {
        console.log(voting);
        setVoting(voting);
        setOption1(getOption(voting.option1))
        setOption2(getOption(voting.option2))
    })
    .catch(err => {
        logError(err);
        setMessage(err.message);
    })
  }, [])

  function getOption(option){
    switch(option) {
        case "Luiz": return { name: "Luiz", image: "https://"};
        case "Henrique": return { name: "Henrique", image: "https://"};
        case "Adriano": return { name: "Adriano", image: "https://"};
        case "Arrascaeta": return { name: "Arrascaeta", image: "https://"};
        default: return DEFAULT_OPTION;
    }
  }

  function btnVote2Click(){
    console.log("Vote 2");
  }

  function btnVote1Click(){
    console.log("Vote 1");
  }

  return (
    <>
      <Head>
        <title>Webbb3 | Vote</title>
        <meta charSet="utf-8" />
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
      </Head>
      <div className="container col-xxl-8 px-4 py-5">
        <div className="row align-items-center">
            <h1 className="display-5 fw-bold text-body-emphasis lh-1 mb-3">Webbb3</h1>
            <p className="lead">On-chain voting.</p>
            {
                voting.maxDate > (Date.now() / 1000)
                ? <p className="lead mb-3"> Vote until {new Date(Number(voting.maxDate) * 1000).toString()}</p>
                : <p className="lead mb-3"> Voting's over. {new Date(Number(voting.maxDate) * 1000).toString()}</p>
            }
        </div>
        <div className="row flex-lg-row-reverse align-items-center g-1 py-5">
            <div className="col-1"></div>
            <div className="col-5">
                <h3 className="my-2 d-block mx-auto" style={{ width: 250 }}> {voting.option2}
                </h3>
                <img src={option2.image} className="d-block mx-auto img-fluid rounded" width={250} height={250} />
                {
                    showVotes > 0 || voting.maxDate < (Date.now() / 1000)
                    ? <button className="btn btn-secondary p-3 my-2 d-block mx-auto" style={{ width: 250 }} disabled={true}>{showVotes === 2 ? Number(voting.votes2) + 1: Number(voting.votes2)} votes</button>
                    : <button className="btn btn-primary p-3 my-2 d-block mx-auto" style={{ width: 250 }} onClick={btnVote2Click()}>Vote out!</button>
                }
            </div>
            <div className="col-5">
                <h3 className="my-2 d-block mx-auto" style={{ width: 250 }}> {voting.option1}
                </h3>
                <img src={option1.image} className="d-block mx-auto img-fluid rounded" width={250} height={250} />
                {
                    showVotes > 0 || voting.maxDate < (Date.now() / 1000)
                    ? <button className="btn btn-secondary p-3 my-2 d-block mx-auto" style={{ width: 250 }} disabled={true}>{showVotes === 1 ? Number(voting.votes1) + 1: Number(voting.votes1)} votes</button>
                    : <button className="btn btn-primary p-3 my-2 d-block mx-auto" style={{ width: 250 }} onClick={btnVote1Click()}>Vote out!</button>
                }
            </div>
        </div>
        <Footer />
      </div>
    </>
  );
}